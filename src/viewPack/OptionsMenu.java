/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewPack;

import controllerPack.DatabaseConnector;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;


import modelPack.Subject;
/**
 * 
 * This is the options menu
 * <p>
 * This menu is a graphical interface for the user
 * to add subjects to their next session of the game
 * is also allows the user to add players to game
 * The information is added when returning to the menu.
 *
 * @author Tasia and Caleb
 * 
 * 
 */
public class OptionsMenu extends javax.swing.JFrame {

    /**
     * Creates new form OptionsMenu
     * <p>
     * The options menu handles a couple of things. It allows
     * the user to choose from a list of available subjects and add them
     * to the next game. It also allows the user to choose the player names.
     * 
     * 
     * The key thing that this class does is feed information to the main menu
     * too pass into the gameboard.
     * 
     */
    public OptionsMenu() {
        initComponents();
        // set window icon:
        this.setLocationRelativeTo(null);
        this.setTitle("Options");
        ImageIcon icon = new ImageIcon("src/guipackage/images/window_icon.png");
        this.setIconImage(icon.getImage());
        
        DatabaseConnector viewerInfo = new DatabaseConnector("triviaDatabase.db");
        viewerInfo.fillSubjects();
        
        this.tableSubjects = viewerInfo.getListSubjects();
        DefaultListModel listModel = new DefaultListModel();
        
        for( int counter = 0; counter < this.tableSubjects.size(); counter++ )
        {
            listModel.addElement(this.tableSubjects.get(counter).getTopic());
        }
        
        this.subjectList.setModel(listModel);
        
        this.selectedList.setModel(this.selectionModel);
        
        this.playersList.setModel(this.playersModel);
        
        this.playerField.setText("");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        returnToMain_bttn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        playerField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        playerAdder = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        playersList = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        clearSelection = new javax.swing.JButton();
        clearPlayers = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        returnToMain_bttn.setText("Return to Main Menu");
        returnToMain_bttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToMain_bttnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Options");

        subjectList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        subjectList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjectListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(subjectList);

        jLabel2.setText("Subjects Available");

        selectedList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(selectedList);

        jLabel3.setText("Selected Subjects");

        jLabel4.setText("Please Select 6 Subjects");

        playerField.setText("jTextField1");
        playerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Add Player");

        playerAdder.setText("Add ");
        playerAdder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerAdderActionPerformed(evt);
            }
        });

        jLabel6.setText("Minimum of 1 Player");

        jLabel7.setText("Maximum of 6");

        playersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(playersList);

        jLabel8.setText("Players");

        jLabel9.setBackground(new java.awt.Color(255, 102, 102));
        jLabel9.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 102));
        jLabel9.setText("Double Click to add");

        clearSelection.setText("Clear");
        clearSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSelectionActionPerformed(evt);
            }
        });

        clearPlayers.setText("Clear");
        clearPlayers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearPlayersMouseClicked(evt);
            }
        });
        clearPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPlayersActionPerformed(evt);
            }
        });

        jLabel10.setText("If nothing is set, default settings");

        jLabel11.setText("will be used. Click return to set.");

        jLabel12.setText("If set partially, default settings will also be used.");

        jLabel13.setText("The same subject can be selected");

        jLabel14.setText("more than once!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnToMain_bttn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(clearSelection)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(playerField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerAdder)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(clearPlayers))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(playerAdder)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(clearSelection)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clearPlayers)
                            .addComponent(jLabel10))
                        .addGap(1, 1, 1)
                        .addComponent(jLabel11))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnToMain_bttn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap())
        );

        returnToMain_bttn.getAccessibleContext().setAccessibleDescription("Exit the options menu");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // When "return to main menu" button is pressed:
    /**
     * This function closes the view and returns to the main menu
     * It also sets information in the new menu to be passed into the gameboard.
     * @param evt jaxax event
     */
    private void returnToMain_bttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToMain_bttnActionPerformed
        // show the MainMenu Jform
        MainMenu menu = new MainMenu();
        menu.setVisible(true);
        String [] sendPlayers = new String[6];
        for(int counter = 0; counter < this.playerIndex; counter++)
        {
            sendPlayers[counter] = this.playersModel.getElementAt(counter).toString();
        }
        
        menu.setPlayerinfo(this.selectedSubjects, sendPlayers, this.playerIndex);
        this.setVisible(false);
   
        
        
        this.dispose();
    }//GEN-LAST:event_returnToMain_bttnActionPerformed

    private void playerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerFieldActionPerformed
    /**
     * This function activates when a list member is selected by double clicking.
     * It then updates the other list with the selected member.
     * @param evt event 
     */
    private void subjectListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectListMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2 && this.subjectList.isEnabled())
        {
            int index = this.subjectList.locationToIndex(evt.getPoint());
            System.out.println("Index " + index);
            this.selectionModel.add(this.selectedIndex, this.subjectList.getModel().getElementAt(index));
            this.selectedSubjects[this.selectedIndex] = index;
            this.selectedIndex ++;
            this.selectedList.setModel(this.selectionModel);
            if(this.selectedIndex == 6)
                this.subjectList.setEnabled(false);
        }
        
                
    }//GEN-LAST:event_subjectListMouseClicked
    /**
     * This function clears the selection list when the button is pressed,
     * so the user can choose different subjects.
     * @param evt event
     */
    private void clearSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSelectionActionPerformed
        // TODO add your handling code here:
        this.subjectList.setEnabled(true);
        DefaultListModel bareModel = new DefaultListModel();
        this.selectionModel = bareModel;
        this.selectedList.setModel(bareModel);
        this.selectedIndex = 0;
    }//GEN-LAST:event_clearSelectionActionPerformed

    private void clearPlayersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearPlayersMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_clearPlayersMouseClicked
    /**
     * This function clears the players list when the button is pressed,
     * so the user can choose different players.
     * @param evt event
     */
    private void clearPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPlayersActionPerformed
        // TODO add your handling code here:
        DefaultListModel bareModel = new DefaultListModel();
        this.playersModel = bareModel;
        this.playersList.setModel(this.playersModel);
        this.playerIndex = 0;
        this.playerAdder.setEnabled(true);
    }//GEN-LAST:event_clearPlayersActionPerformed
    /**
     * This function adds the player taken from text box to the selection list.
     * It then adds the player name to the list of players.
     * @param evt event
     */
    private void playerAdderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerAdderActionPerformed
        // TODO add your handling code here:
        if(this.playerField.getText().equals(""));
            // do nothing
        else
        {
            String playerName = this.playerField.getText();
            this.playersModel.add(this.playerIndex,playerName);
            this.playerIndex ++; 
            this.playerField.setText("");
            if(this.playerIndex == 6)
                this.playerAdder.setEnabled(false);
        }

    }//GEN-LAST:event_playerAdderActionPerformed


    // private variables for use in functions
    private List<Subject> tableSubjects = new ArrayList<Subject>();
    private DefaultListModel selectionModel = new DefaultListModel();
    private DefaultListModel playersModel = new DefaultListModel();
    private int selectedIndex = 0;
    private int playerIndex = 0;
    private int [] selectedSubjects = new int[6];

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearPlayers;
    private javax.swing.JButton clearSelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton playerAdder;
    private javax.swing.JTextField playerField;
    private javax.swing.JList<String> playersList;
    private javax.swing.JButton returnToMain_bttn;
    private javax.swing.JList<String> selectedList;
    private javax.swing.JList<String> subjectList;
    // End of variables declaration//GEN-END:variables
}

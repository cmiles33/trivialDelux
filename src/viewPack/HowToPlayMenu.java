/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewPack;

import javax.swing.ImageIcon;

/**
 * This is the how to play menu.
 * <p>
 *  Only used to let the player know how to play. 
 * @author tajac
 */
public class HowToPlayMenu extends javax.swing.JFrame {

    /**
     * Creates new form HowToPlay2
     * Form contains information for the player before they play.
     */
    public HowToPlayMenu() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("How To Play!");
        // set window icon:
        ImageIcon icon = new ImageIcon("src/guipackage/images/window_icon.png");
        this.setIconImage(icon.getImage());
        this.jTextArea1.setCaretPosition(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("This is Trivial Delux 6 Piece Edition\n\nEach player will have a game piece that can hold 6 \"pieces\". The player to go first will be chosen in the order the user created them. The user before starting a game should go into the options menu and select the subjects they are interested in. The user also needs to add players to the game as well. If the player does not do these steps, a generic player will be added and default subjects are set.\n\nEach space on the board is colored. Each color corresponds to a trivia question subject, except for the white squares. The white squares will pick from a random subject in the list of selected subjects. The player must answer a trivia question related to the subject their piece landed on. Each player is represnted by a red square on the board to show their movement. Their place on the board is updated each time they roll the dice. The player is allowed to go only forward and left / straight when  they reach a fork on the board. The player will also have an option to go backwards to the center, once the player reaches the center the player gets the option to choose any direction they'd like, with the same movement restrictions. \n\nIf the player answers a question on the piece part of the track. The player will then get that subject piece. They will also continue their turn. If the player answers a question on a normal piece of the board, the player will also continue their turn but will not gain a new piece. If the player gets question wrong, it then becomes the next players turn. This goes on until one player has collected all the pieces.\n\nThe user also has the ability to take a look at the questions and subjects before hand by accessing the Q database from the main menu.\n\nLastly, please make sure to set options then start the game. Options are not saved after exiting the game or loading the Q database.\n\nGood luck and have fun!\n\n");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("How to Play");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton1.setText("Return to Main Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Goes back to main menu
     * @param evt javax event
     */
    // When "return to main menu" button is pressed:
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // show the MainMenu Jform
        MainMenu menu = new MainMenu();
        menu.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
